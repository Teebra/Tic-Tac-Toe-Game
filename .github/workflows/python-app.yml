name: Python package

on:
  pull_request:
    branches:
      - '*' 
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          if ! flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics; then
            echo "Python syntax errors or undefined names found, setting workflow status to failure"
            exit 1
          fi
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          if ! flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics; then
            echo "Flake8 errors found, setting workflow status to failure"
            exit 1
          fi
      - name: Test with pytest
        run: |
          if ! pytest -v test.py; then
            echo "Tests failed, setting workflow status to failure"
            exit 1
          else
            echo "Tests passed, setting workflow status to success"
          fi

  trigger_monitoring:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # You can adjust the Node.js version as needed
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run GitHub Script
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const workflowFileName = "issue_create.yml"; // Update with the correct filename of your monitoring workflow
            
            const response = await github.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: workflowFileName,
            });
            
            console.log(response);








